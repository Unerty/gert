{"version":3,"sources":["webpack:///./src/components/Path.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/functions/constants.ts"],"names":["Path","props","state","probability","initialProbability","additiveParameter","initialAdditiveParameter","render","id","this","style","backgroundColor","display","width","margin","padding","type","onChange","event","setState","Number","target","value","toString","min","step","max","React","App","distribution","s","n","m","r","a","b","p","pArray","TArray","lambda","sigma","nVisible","mVisible","rVisible","aVisible","bVisible","pVisible","pArrayVisible","TArrayVisible","lambdaVisible","sigmaVisible"],"mappings":"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","file":"component---src-pages-index-tsx-0680a68a8242112dda2c.js","sourcesContent":["import * as React from 'react';\n\ninterface IProps {\n  id: number;\n  initialProbability: number;\n  initialAdditiveParameter: number;\n}\n\ninterface IState {\n  probability: number;\n  additiveParameter: number;\n}\n\nexport default class Path extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      probability: props.initialProbability,\n      additiveParameter: props.initialAdditiveParameter\n    };\n  }\n\n  render() {\n    const {id} = this.props;\n    const {probability, additiveParameter} = this.state;\n    return (\n      <div style={{\n        backgroundColor: 'sandybrown',\n        display: 'inline-block',\n        width: '150px',\n        margin: '0.5rem',\n        padding: '0.25rem'\n      }}>\n        <h3>Номер дуги: {id}</h3>\n        <span>Ціна, грн.:<br/></span>\n        <input type=\"number\" onChange={event => this.setState({ additiveParameter: Number(event.target.value) })}\n               value={additiveParameter.toString()} min={0} step={0.01}\n               style={{width: '100px'}}\n        />\n        <br/>\n        <span>Ймовірність: <strong> {probability}</strong><br/></span>\n        <input type={'range'} onChange={event => this.setState({ probability: Number(event.target.value) })}\n               value={probability.toString()} min={0} max={1} step={0.01}/>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport Path from '@/components/Path';\nimport {\n  BINOMIAL_DISTRIBUTION,\n  CONTINIOUS_UNIFORM_DISTRIBUTION,\n  DISCRETE_DISTRIBUTION,\n  EXPONENTIAL_DISTRIBUTION,\n  GAMMA_DISTRIBUTION,\n  GEOMETRICAL_DISTRIBUTION,\n  NEGATIVE_BINOMIAL_DISTRIBUTION,\n  NORMAL_DISTRIBUTION,\n  PUASSON_DISTRIBUTION,\n} from '@/functions/constants';\n\ninterface IProps {\n}\n\ninterface IState {\n  distribution: string;\n  s: number;\n  n: number;\n  m: number;\n  r: number;\n  a: number;\n  b: number;\n  p: number;\n  pArray: Array<number>;\n  TArray: Array<number>;\n  lambda: number;\n  sigma: number;\n}\n\nexport default class App extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      distribution: BINOMIAL_DISTRIBUTION,\n      s: 1,\n      n: 1,\n      m: 1,\n      r: 1,\n      a: 1,\n      b: 1,\n      p: 1,\n      pArray: [1],\n      TArray: [1],\n      lambda: 1,\n      sigma: 1,\n    };\n  }\n\n  render() {\n\n    const nVisible = (\n      this.state.distribution === BINOMIAL_DISTRIBUTION ||\n      this.state.distribution === NEGATIVE_BINOMIAL_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const mVisible = this.state.distribution === NORMAL_DISTRIBUTION ? 'unset' : 'none';\n    const rVisible = this.state.distribution === NEGATIVE_BINOMIAL_DISTRIBUTION ? 'unset' : 'none';\n    const aVisible = (\n      this.state.distribution === EXPONENTIAL_DISTRIBUTION ||\n      this.state.distribution === GAMMA_DISTRIBUTION ||\n      this.state.distribution === CONTINIOUS_UNIFORM_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const bVisible = (\n      this.state.distribution === GAMMA_DISTRIBUTION ||\n      this.state.distribution === CONTINIOUS_UNIFORM_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const pVisible = (\n      this.state.distribution === BINOMIAL_DISTRIBUTION ||\n      this.state.distribution === GEOMETRICAL_DISTRIBUTION ||\n      this.state.distribution === NEGATIVE_BINOMIAL_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const pArrayVisible = (\n      this.state.distribution === DISCRETE_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const TArrayVisible = pArrayVisible;\n    const lambdaVisible = this.state.distribution === PUASSON_DISTRIBUTION ? 'unset' : 'none';\n    const sigmaVisible = this.state.distribution === NORMAL_DISTRIBUTION ? 'unset' : 'none';\n    return (\n      <main style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          {/*<img src={\"https://github.com/Unerty/gert/blob/main/static/ris4.png?raw=true\"} width={'75%'}/>\n        <img src={\"https://github.com/Unerty/gert/blob/main/static/ris5.png?raw=true\"} width={'25%'}/>*/}\n\n          Оберіть розподіл:<br/>\n          <select value={this.state.distribution}\n                  onChange={event => this.setState({ distribution: event.target.value })}>\n            <option value={BINOMIAL_DISTRIBUTION}>{BINOMIAL_DISTRIBUTION}</option>\n            <option value={DISCRETE_DISTRIBUTION}>{DISCRETE_DISTRIBUTION}</option>\n            <option value={EXPONENTIAL_DISTRIBUTION}>{EXPONENTIAL_DISTRIBUTION}</option>\n            <option value={GAMMA_DISTRIBUTION}>{GAMMA_DISTRIBUTION}</option>\n            <option value={GEOMETRICAL_DISTRIBUTION}>{GEOMETRICAL_DISTRIBUTION}</option>\n            <option value={NEGATIVE_BINOMIAL_DISTRIBUTION}>{NEGATIVE_BINOMIAL_DISTRIBUTION}</option>\n            <option value={NORMAL_DISTRIBUTION}>{NORMAL_DISTRIBUTION}</option>\n            <option value={PUASSON_DISTRIBUTION}>{PUASSON_DISTRIBUTION}</option>\n            <option value={CONTINIOUS_UNIFORM_DISTRIBUTION}>{CONTINIOUS_UNIFORM_DISTRIBUTION}</option>\n          </select><br/><br/>\n          Введіть змінні: <br/>\n          {/*s = <input value={this.state.s}\n                     onChange={event => this.setState({ s: Number(event.target.value)})}/><br/>*/}\n          <div style={{ display: nVisible }}>\n            n = <input value={this.state.n}\n                       onChange={event => this.setState({ n: Number(event.target.value) })}/><br/>\n          </div>\n          <div style={{ display: mVisible }}>\n            m = <input value={this.state.m}\n                       onChange={event => this.setState({ m: Number(event.target.value) })}/><br/>\n          </div>\n          <div style={{ display: rVisible }}>\n            r = <input value={this.state.r}\n                       onChange={event => this.setState({ r: Number(event.target.value) })}/><br/>\n          </div>\n          <div style={{ display: aVisible }}>\n            a = <input value={this.state.a}\n                       onChange={event => this.setState({ a: Number(event.target.value) })}/><br/>\n          </div>\n          <div style={{ display: bVisible }}>\n            b = <input value={this.state.b}\n                       onChange={event => this.setState({ b: Number(event.target.value) })}/><br/>\n          </div>\n          <div style={{ display: pVisible }}>\n            p = <input value={this.state.p}\n                       onChange={event => this.setState({ p: Number(event.target.value) })}/><br/>\n          </div>\n          <div style={{ display: pArrayVisible }}>\n            p1, p2, ... pn = <input/> <br/>\n          </div>\n          <div style={{ display: TArrayVisible }}>\n            T1, T2, ... Tn = <input/> <br/>\n          </div>\n          <div style={{ display: lambdaVisible }}>\n            lambda = <input value={this.state.lambda}\n                            onChange={event => this.setState({ lambda: Number(event.target.value) })}/><br/>\n          </div>\n          <div style={{ display: sigmaVisible }}>\n            sigma = <input value={this.state.sigma}\n                           onChange={event => this.setState({ sigma: Number(event.target.value) })}/><br/>\n          </div>\n        </div>\n        <div style={{ width: '50%' }}>\n          <Path id={1} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={2} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={3} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={4} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={5} initialProbability={1} initialAdditiveParameter={2000}/>\n\n          <Path id={6} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={7} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={8} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={9} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={10} initialProbability={1} initialAdditiveParameter={0}/>\n\n          <Path id={11} initialProbability={1} initialAdditiveParameter={10000}/>\n          <Path id={12} initialProbability={1} initialAdditiveParameter={1000}/>\n          <Path id={13} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={14} initialProbability={0.05} initialAdditiveParameter={0}/>\n          <Path id={15} initialProbability={1} initialAdditiveParameter={0}/>\n\n          <Path id={16} initialProbability={0.95} initialAdditiveParameter={0}/>\n          <Path id={17} initialProbability={1} initialAdditiveParameter={0}/>\n          <Path id={18} initialProbability={1} initialAdditiveParameter={500}/>\n        </div>\n\n      </main>\n    );\n  }\n}\n","export const BINOMIAL_DISTRIBUTION = 'Біноміальний розподіл';\nexport const DISCRETE_DISTRIBUTION = 'Дискретний розподіл';\nexport const EXPONENTIAL_DISTRIBUTION = 'Експоненціальний розподіл';\nexport const GAMMA_DISTRIBUTION = 'Гамма розподіл';\nexport const GEOMETRICAL_DISTRIBUTION = 'Геометричний розподіл';\nexport const NEGATIVE_BINOMIAL_DISTRIBUTION = \"Від'ємний біноміальний розподіл\";\nexport const NORMAL_DISTRIBUTION = 'Нормальний розподіл';\nexport const PUASSON_DISTRIBUTION = 'Розподіл Пуассона';\nexport const CONTINIOUS_UNIFORM_DISTRIBUTION = 'Рівномірний розподіл';\n"],"sourceRoot":""}