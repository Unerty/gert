{"version":3,"sources":["webpack:///./src/functions/constants.ts","webpack:///./src/components/Path.tsx","webpack:///./src/models/PathModel.tsx","webpack:///./src/functions/functions.ts","webpack:///./src/pages/index.tsx"],"names":["Distribution","Path","props","render","BINOMIAL_DISTRIBUTION","CONTINUOUS_UNIFORM_DISTRIBUTION","EXPONENTIAL_DISTRIBUTION","GAMMA_DISTRIBUTION","GEOMETRICAL_DISTRIBUTION","NEGATIVE_BINOMIAL_DISTRIBUTION","NORMAL_DISTRIBUTION","PUASSON_DISTRIBUTION","nVisible","this","distribution","mVisible","rVisible","aVisible","bVisible","lambdaVisible","sigmaVisible","id","probability","additiveParameter","setAdditiveParameter","lambda","sigma","a","b","m","n","r","s","setProbability","setDistribution","style","backgroundColor","display","width","height","margin","padding","type","onChange","event","Number","target","value","toString","min","step","max","setState","React","PathModel","wEsFunction","W1","W2","W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","calculateWFunctionForPath","path","isSEqualZero","moment","p","Math","pow","E","binomialDistributionMomentGeneratingFunction","continuousUniformDistributionMomentGeneratingFunction","exponentialDistributionMomentGeneratingFunction","gammaDistributionMomentGeneratingFunction","geometricalDistributionMomentGeneratingFunction","negativeBinomialDistributionMomentGeneratingFunction","normalDistributionMomentGeneratingFunction","puassonDistributionMomentGeneratingFunction","App","state","pathes","map"],"mappings":"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","file":"component---src-pages-index-tsx-264348a58d678897a369.js","sourcesContent":["export enum Distribution {\n  BINOMIAL_DISTRIBUTION = 'Біноміальний розподіл',\n  EXPONENTIAL_DISTRIBUTION = 'Експоненціальний розподіл',\n  GAMMA_DISTRIBUTION = 'Гамма розподіл',\n  GEOMETRICAL_DISTRIBUTION = 'Геометричний розподіл',\n  NEGATIVE_BINOMIAL_DISTRIBUTION = 'Від\\'ємний біноміальний розподіл',\n  NORMAL_DISTRIBUTION = 'Нормальний розподіл',\n  PUASSON_DISTRIBUTION = 'Розподіл Пуассона',\n  CONTINUOUS_UNIFORM_DISTRIBUTION = 'Рівномірний розподіл',\n}\n","import * as React from 'react';\nimport PathModel from '@/models/PathModel';\nimport { Distribution } from '@/functions/constants';\n\ninterface IProps extends PathModel {\n  setAdditiveParameter: (additiveParameter: number) => void;\n  setProbability: (probability: number) => void;\n  setDistribution: (distribution: string) => void;\n}\n\nexport default class Path extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { BINOMIAL_DISTRIBUTION, CONTINUOUS_UNIFORM_DISTRIBUTION, EXPONENTIAL_DISTRIBUTION, GAMMA_DISTRIBUTION, GEOMETRICAL_DISTRIBUTION, NEGATIVE_BINOMIAL_DISTRIBUTION, NORMAL_DISTRIBUTION, PUASSON_DISTRIBUTION } = Distribution;\n\n    const nVisible = (\n      this.props.distribution === BINOMIAL_DISTRIBUTION ||\n      this.props.distribution === NEGATIVE_BINOMIAL_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const mVisible = this.props.distribution === NORMAL_DISTRIBUTION ? 'unset' : 'none';\n    const rVisible = this.props.distribution === NEGATIVE_BINOMIAL_DISTRIBUTION ? 'unset' : 'none';\n    const aVisible = (\n      this.props.distribution === EXPONENTIAL_DISTRIBUTION ||\n      this.props.distribution === GAMMA_DISTRIBUTION ||\n      this.props.distribution === CONTINUOUS_UNIFORM_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const bVisible = (\n      this.props.distribution === GAMMA_DISTRIBUTION ||\n      this.props.distribution === CONTINUOUS_UNIFORM_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const pVisible = (\n      this.props.distribution === BINOMIAL_DISTRIBUTION ||\n      this.props.distribution === GEOMETRICAL_DISTRIBUTION ||\n      this.props.distribution === NEGATIVE_BINOMIAL_DISTRIBUTION\n    ) ? 'unset' : 'none';\n    const lambdaVisible = this.props.distribution === PUASSON_DISTRIBUTION ? 'unset' : 'none';\n    const sigmaVisible = this.props.distribution === NORMAL_DISTRIBUTION ? 'unset' : 'none';\n    const { id, probability, additiveParameter, distribution, lambda, sigma, a, b, m, n, r, s, setAdditiveParameter, setProbability, setDistribution } = this.props;\n    return (\n      <div style={{\n        backgroundColor: 'sandybrown',\n        display: 'inline-grid',\n        width: '250px',\n        height: '270px',\n        margin: '0.5rem',\n        padding: '0.25rem',\n      }}>\n        <div>\n          <h3>Номер дуги: {id}</h3>\n          <span>Вартість, грн.:<br/></span>\n          <input type=\"number\" onChange={event => setAdditiveParameter(Number(event.target.value))}\n                 value={additiveParameter.toString()} min={0} step={0.01}\n                 style={{ width: '100px' }}\n          />\n          <br/>\n          <span>Ймовірність: <strong> {probability}</strong><br/></span>\n          <input type={'range'} onChange={event => setProbability(Number(event.target.value))}\n                 value={probability.toString()} min={0} max={1} step={0.01}/><br/>\n          Розподіл:<br/>\n          <select value={this.props.distribution}\n                  onChange={event => setDistribution(event.target.value)}>\n            <option value={BINOMIAL_DISTRIBUTION}>{BINOMIAL_DISTRIBUTION}</option>\n            <option value={EXPONENTIAL_DISTRIBUTION}>{EXPONENTIAL_DISTRIBUTION}</option>\n            <option value={GAMMA_DISTRIBUTION}>{GAMMA_DISTRIBUTION}</option>\n            <option value={GEOMETRICAL_DISTRIBUTION}>{GEOMETRICAL_DISTRIBUTION}</option>\n            <option value={NEGATIVE_BINOMIAL_DISTRIBUTION}>{NEGATIVE_BINOMIAL_DISTRIBUTION}</option>\n            <option value={NORMAL_DISTRIBUTION}>{NORMAL_DISTRIBUTION}</option>\n            <option value={PUASSON_DISTRIBUTION}>{PUASSON_DISTRIBUTION}</option>\n            <option value={CONTINUOUS_UNIFORM_DISTRIBUTION}>{CONTINUOUS_UNIFORM_DISTRIBUTION}</option>\n          </select>\n        </div>\n        <div style={{ display: nVisible }}>\n          <br/>\n          n = <input value={this.props.n}\n                     onChange={event => this.setState({ n: Number(event.target.value) })}/><br/>\n        </div>\n        <div style={{ display: mVisible }}>\n          <br/>\n          m = <input value={this.props.m}\n                     onChange={event => this.setState({ m: Number(event.target.value) })}/><br/>\n        </div>\n        <div style={{ display: rVisible }}>\n          <br/>\n          r = <input value={this.props.r}\n                     onChange={event => this.setState({ r: Number(event.target.value) })}/><br/>\n        </div>\n        <div style={{ display: aVisible }}>\n          <br/>\n          a = <input value={this.props.a}\n                     onChange={event => this.setState({ a: Number(event.target.value) })}/><br/>\n        </div>\n        <div style={{ display: bVisible }}>\n          <br/>\n          b = <input value={this.props.b}\n                     onChange={event => this.setState({ b: Number(event.target.value) })}/><br/>\n        </div>\n        <div style={{ display: lambdaVisible }}>\n          <br/>\n          lambda = <input value={this.props.lambda}\n                          onChange={event => this.setState({ lambda: Number(event.target.value) })}/><br/>\n        </div>\n        <div style={{ display: sigmaVisible }}>\n          <br/>\n          sigma = <input value={this.props.sigma}\n                         onChange={event => this.setState({ sigma: Number(event.target.value) })}/><br/>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Distribution } from '@/functions/constants';\n\nexport default class PathModel {\n  constructor(id: number, probability: number, additiveParameter: number, distribution: Distribution, s: number, n: number, m: number, r: number, a: number, b: number, lambda: number, sigma: number) {\n    this.id = id;\n    this.probability = probability;\n    this.additiveParameter = additiveParameter;\n    this.distribution = distribution;\n    this.s = s;\n    this.n = n;\n    this.m = m;\n    this.r = r;\n    this.a = a;\n    this.b = b;\n    this.lambda = lambda;\n    this.sigma = sigma;\n  }\n  id: number;\n  probability: number;\n  additiveParameter: number;\n  distribution: Distribution;\n  s: number;\n  n: number;\n  m: number;\n  r: number;\n  a: number;\n  b: number;\n  lambda: number;\n  sigma: number;\n}\n","import { Distribution } from '@/functions/constants';\nimport PathModel from '@/models/PathModel';\n\nexport function wEsFunction(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18) {\n  return ((W1 * W3 + W2 * W4 * W5 * W6) * W7 * W8 * (W9 * W11 + W10 * W12) * W13 * W16 * W17 * W18) / ((1 - W8 * (W9 * W11 + W10 * W12) * W13 * W14 * W15));\n}\n\nexport function binomialDistributionMomentGeneratingFunction(s: number, n: number, p: number) {\n  return Math.pow((p * Math.pow(Math.E, s) + 1 - p), n);\n}\n\nexport function exponentialDistributionMomentGeneratingFunction(s: number, a: number) {\n  return Math.pow((1 - (s / a)), -1);\n}\n\nexport function gammaDistributionMomentGeneratingFunction(s: number, a: number, b: number) {\n  return Math.pow((1 - (s / a)), (-1 * b));\n}\n\nexport function geometricalDistributionMomentGeneratingFunction(s: number, p: number) {\n  let nominator: number = p * Math.pow(Math.E, s);\n  let denominator: number = (1 - Math.pow(Math.E, s) + p * Math.pow(Math.E, s));\n  return (nominator / denominator);\n}\n\nexport function negativeBinomialDistributionMomentGeneratingFunction(s: number, p: number, r: number) {\n  return Math.pow(p / (1 - Math.pow(Math.E, s) + p * Math.pow(Math.E, s)), r);\n}\n\nexport function normalDistributionMomentGeneratingFunction(s: number, m: number, sigma: number) {\n  return Math.pow(Math.E, s * m + (1 / 2) * s * s * sigma * sigma);\n}\n\nexport function puassonDistributionMomentGeneratingFunction(s: number, lambda: number) {\n  return Math.pow(Math.E, lambda * (Math.pow(Math.E, s) - 1));\n}\n\nexport function continuousUniformDistributionMomentGeneratingFunction(s: number, a: number, b: number) {\n  let nominator: number = Math.pow(Math.E, s * a) - Math.pow(Math.E, s * b);\n  let denominator: number = (a - b) * s;\n  return (nominator / denominator);\n}\n\n\nexport function binomialDistributionExpectedValueFunction(n: number, p: number) {\n  return n * p;\n}\n\nexport function exponentialDistributionExpectedValueFunction(a: number) {\n  return 1 / a;\n}\n\nexport function gammaDistributionExpectedValueFunction(b: number, a: number) {\n  return b / a;\n}\n\nexport function geometricalDistributionExpectedValueFunction(p: number) {\n  return 1 / p;\n}\n\nexport function negativeBinomialDistributionExpectedValueFunction(r: number, p: number) {\n  return (r * (1 - p)) / p;\n}\n\nexport function normalBinomialDistributionExpectedValueFunction(m: number) {\n  return m;\n}\n\nexport function puassonBinomialDistributionExpectedValueFunction(lambda: number) {\n  return lambda;\n}\n\nexport function continuousUniformDistributionExpectedValueFunction(a: number, b: number) {\n  return (a + b) / 2;\n}\n\n\nexport function binomialDistributionSecondMomentFunction(n: number, p: number) {\n  return n * p * (n * p + 1 - p);\n}\n\nexport function exponentialDistributionSecondMomentFunction(a: number) {\n  return 2 / (a * a);\n}\n\nexport function gammaDistributionSecondMomentFunction(b: number, a: number) {\n  return b * (b + 1) / (a * a);\n}\n\nexport function geometricalDistributionSecondMomentFunction(p: number) {\n  return (2 - p) / (p * p);\n}\n\nexport function negativeBinomialDistributionSecondMomentFunction(r: number, p: number) {\n  return (r * (1 - p) * (1 + r - r * p)) / (p * p);\n}\n\nexport function normalBinomialDistributionSecondMomentFunction(m: number, sigma: number) {\n  return m * m + sigma * sigma;\n}\n\nexport function puassonBinomialDistributionSecondMomentFunction(lambda: number) {\n  return lambda * (1 + lambda);\n}\n\nexport function continuousUniformDistributionSecondMomentFunction(a: number, b: number) {\n  return (a * a + a * b + b * b) / 3;\n}\n\n\nexport function calculateWFunctionForPath(path: PathModel, isSEqualZero: boolean) {\n  let moment: number;\n  let W: number;\n  const { a, distribution, sigma, lambda, probability, additiveParameter, b, m, n, r } = path;\n  let s = isSEqualZero ? 0 : path.s;\n  const { BINOMIAL_DISTRIBUTION, CONTINUOUS_UNIFORM_DISTRIBUTION, EXPONENTIAL_DISTRIBUTION, GAMMA_DISTRIBUTION, GEOMETRICAL_DISTRIBUTION, NEGATIVE_BINOMIAL_DISTRIBUTION, NORMAL_DISTRIBUTION, PUASSON_DISTRIBUTION } = Distribution;\n  switch (distribution) {\n    case BINOMIAL_DISTRIBUTION: {\n      moment = binomialDistributionMomentGeneratingFunction(s, n, probability);\n      break;\n    }\n    case CONTINUOUS_UNIFORM_DISTRIBUTION: {\n      moment = continuousUniformDistributionMomentGeneratingFunction(s, a, b);\n      break;\n    }\n    case EXPONENTIAL_DISTRIBUTION: {\n      moment = exponentialDistributionMomentGeneratingFunction(s, a);\n      break;\n    }\n    case GAMMA_DISTRIBUTION: {\n      moment = gammaDistributionMomentGeneratingFunction(s, a, b);\n      break;\n    }\n    case GEOMETRICAL_DISTRIBUTION: {\n      moment = geometricalDistributionMomentGeneratingFunction(s, probability);\n      break;\n    }\n    case NEGATIVE_BINOMIAL_DISTRIBUTION: {\n      moment = negativeBinomialDistributionMomentGeneratingFunction(s, probability, r);\n      break;\n    }\n    case NORMAL_DISTRIBUTION: {\n      moment = normalDistributionMomentGeneratingFunction(s, m, sigma);\n      break;\n    }\n    case PUASSON_DISTRIBUTION: {\n      moment = puassonDistributionMomentGeneratingFunction(s, lambda);\n      break;\n    }\n  }\n  W = moment * probability;\n  return W;\n}\n","import * as React from 'react';\nimport Path from '@/components/Path';\nimport { Distribution } from '@/functions/constants';\nimport PathModel from '@/models/PathModel';\nimport { calculateWFunctionForPath, wEsFunction } from '@/functions/functions';\n\nconst { BINOMIAL_DISTRIBUTION, CONTINUOUS_UNIFORM_DISTRIBUTION, EXPONENTIAL_DISTRIBUTION, GAMMA_DISTRIBUTION, GEOMETRICAL_DISTRIBUTION, NEGATIVE_BINOMIAL_DISTRIBUTION, NORMAL_DISTRIBUTION, PUASSON_DISTRIBUTION } = Distribution;\n\n\ninterface IProps {\n}\n\ninterface IState {\n  pathes: Array<PathModel>\n}\n\nexport default class App extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pathes: [\n        new PathModel(1, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(2, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(3, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(4, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(5, 1, 2000, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(6, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(7, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(8, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(9, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(10, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(11, 1, 10000, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(12, 1, 1000, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(13, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(14, 0.05, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(15, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(16, 0.95, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(17, 1, 0, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n        new PathModel(18, 1, 500, NORMAL_DISTRIBUTION, 1, 1, 1, 1, 1, 1, 1, 1),\n      ],\n    };\n  }\n\n  render() {\n    const { pathes } = this.state;\n    return (\n      <main>\n        <div style={{ display: 'flex' }}>\n          <div>\n            {pathes.map(\n              path => <Path id={path.id}\n                            probability={path.probability}\n                            additiveParameter={path.additiveParameter}\n                            distribution={path.distribution}\n                            s={path.s}\n                            m={path.m}\n                            r={path.r}\n                            n={path.n}\n                            a={path.a}\n                            b={path.b}\n                            lambda={path.lambda}\n                            sigma={path.sigma}\n                            setAdditiveParameter={(additiveParameter: number) => {\n                              let pathes = this.state.pathes;\n                              path.additiveParameter = additiveParameter;\n                              this.setState({ pathes: pathes });\n                            }}\n                            setProbability={(probability: number) => {\n                              let pathes = this.state.pathes;\n                              path.probability = probability;\n                              this.setState({ pathes: pathes });\n                            }}\n                            setDistribution={(distribution: Distribution) => {\n                              let pathes = this.state.pathes;\n                              path.distribution = distribution;\n                              this.setState({ pathes: pathes });\n                            }}\n\n              />,\n            )}\n\n          </div>\n        </div>\n        Результати: <br/>\n        W<small>E</small>(s) = {wEsFunction(\n        calculateWFunctionForPath(pathes[0],false),\n        calculateWFunctionForPath(pathes[1],false),\n        calculateWFunctionForPath(pathes[2],false),\n        calculateWFunctionForPath(pathes[3],false),\n        calculateWFunctionForPath(pathes[4],false),\n        calculateWFunctionForPath(pathes[5],false),\n        calculateWFunctionForPath(pathes[6],false),\n        calculateWFunctionForPath(pathes[7],false),\n        calculateWFunctionForPath(pathes[8],false),\n        calculateWFunctionForPath(pathes[9],false),\n        calculateWFunctionForPath(pathes[10],false),\n        calculateWFunctionForPath(pathes[11],false),\n        calculateWFunctionForPath(pathes[12],false),\n        calculateWFunctionForPath(pathes[13],false),\n        calculateWFunctionForPath(pathes[14],false),\n        calculateWFunctionForPath(pathes[15],false),\n        calculateWFunctionForPath(pathes[16],false),\n        calculateWFunctionForPath(pathes[17],false),\n        )},<br/>\n        W<small>E</small>(0) = {wEsFunction(\n        calculateWFunctionForPath(pathes[0],true),\n        calculateWFunctionForPath(pathes[1],true),\n        calculateWFunctionForPath(pathes[2],true),\n        calculateWFunctionForPath(pathes[3],true),\n        calculateWFunctionForPath(pathes[4],true),\n        calculateWFunctionForPath(pathes[5],true),\n        calculateWFunctionForPath(pathes[6],true),\n        calculateWFunctionForPath(pathes[7],true),\n        calculateWFunctionForPath(pathes[8],true),\n        calculateWFunctionForPath(pathes[9],true),\n        calculateWFunctionForPath(pathes[10],true),\n        calculateWFunctionForPath(pathes[11],true),\n        calculateWFunctionForPath(pathes[12],true),\n        calculateWFunctionForPath(pathes[13],true),\n        calculateWFunctionForPath(pathes[14],true),\n        calculateWFunctionForPath(pathes[15],true),\n        calculateWFunctionForPath(pathes[16],true),\n        calculateWFunctionForPath(pathes[17],true),\n      )},<br/>\n      µ = 12,879,<br/>\n      σ<sup>2</sup> = 9,211<br/>\n\n      </main>\n    );\n  }\n}\n"],"sourceRoot":""}